/***************************************************************************
 *   Copyright (C) 2010 by A.J. Admiraal                                   *
 *   code@admiraal.dds.nl                                                  *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License version 2 as     *
 *   published by the Free Software Foundation.                            *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.           *
 ***************************************************************************/

#include "sstringparser.h"

namespace LXiStream {

/*! Returns the translated language name for the ISO 639-1 or ISO 639-2 language
    code.
 */
QString SStringParser::iso639Language(const char *lang)
{
  const int langLen = qstrlen(lang);

  if (langLen == 2)
  {
    if      (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("aa"))  return QObject::tr("Afar");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ab"))  return QObject::tr("Abkhazian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("af"))  return QObject::tr("Afrikaans");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("am"))  return QObject::tr("Amharic");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ar"))  return QObject::tr("Arabic");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("as"))  return QObject::tr("Assamese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ay"))  return QObject::tr("Aymara");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("az"))  return QObject::tr("Azerbaijani");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ba"))  return QObject::tr("Bashkir");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("be"))  return QObject::tr("Byelorussian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bg"))  return QObject::tr("Bulgarian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bh"))  return QObject::tr("Bihari");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bi"))  return QObject::tr("Bislama");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bn"))  return QObject::tr("Bengali");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bo"))  return QObject::tr("Tibetan");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("br"))  return QObject::tr("Breton");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ca"))  return QObject::tr("Catalan");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("co"))  return QObject::tr("Corsican");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("cs"))  return QObject::tr("Czech");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("cy"))  return QObject::tr("Welsh");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("da"))  return QObject::tr("Danish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("de"))  return QObject::tr("German");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("dz"))  return QObject::tr("Bhutani");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("el"))  return QObject::tr("Greek");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("en"))  return QObject::tr("English");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("eo"))  return QObject::tr("Esperanto");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("es"))  return QObject::tr("Spanish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("et"))  return QObject::tr("Estonian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("eu"))  return QObject::tr("Basque");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fa"))  return QObject::tr("Persian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fi"))  return QObject::tr("Finnish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fj"))  return QObject::tr("Fiji");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fo"))  return QObject::tr("Faeroese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fr"))  return QObject::tr("French");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fy"))  return QObject::tr("Frisian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ga"))  return QObject::tr("Irish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("gd"))  return QObject::tr("Gaelic");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("gl"))  return QObject::tr("Galician");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("gn"))  return QObject::tr("Guarani");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("gu"))  return QObject::tr("Gujarati");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ha"))  return QObject::tr("Hausa");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("hi"))  return QObject::tr("Hindi");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("hr"))  return QObject::tr("Croatian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("hu"))  return QObject::tr("Hungarian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("hy"))  return QObject::tr("Armenian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ia"))  return QObject::tr("Interlingua");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ie"))  return QObject::tr("Interlingue");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ik"))  return QObject::tr("Inupiak");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("in"))  return QObject::tr("Indonesian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("is"))  return QObject::tr("Icelandic");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("it"))  return QObject::tr("Italian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("iw"))  return QObject::tr("Hebrew");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ja"))  return QObject::tr("Japanese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ji"))  return QObject::tr("Yiddish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("jw"))  return QObject::tr("Javanese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ka"))  return QObject::tr("Georgian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("kk"))  return QObject::tr("Kazakh");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("kl"))  return QObject::tr("Greenlandic");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("km"))  return QObject::tr("Cambodian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("kn"))  return QObject::tr("Kannada");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ko"))  return QObject::tr("Korean");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ks"))  return QObject::tr("Kashmiri");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ku"))  return QObject::tr("Kurdish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ky"))  return QObject::tr("Kirghiz");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("la"))  return QObject::tr("Latin");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ln"))  return QObject::tr("Lingala");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("lo"))  return QObject::tr("Laothian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("lt"))  return QObject::tr("Lithuanian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("lv"))  return QObject::tr("Latvian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mg"))  return QObject::tr("Malagasy");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mi"))  return QObject::tr("Maori");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mk"))  return QObject::tr("Macedonian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ml"))  return QObject::tr("Malayalam");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mn"))  return QObject::tr("Mongolian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mo"))  return QObject::tr("Moldavian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mr"))  return QObject::tr("Marathi");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ms"))  return QObject::tr("Malay");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mt"))  return QObject::tr("Maltese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("my"))  return QObject::tr("Burmese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("na"))  return QObject::tr("Nauru");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ne"))  return QObject::tr("Nepali");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("nl"))  return QObject::tr("Dutch");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("no"))  return QObject::tr("Norwegian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("oc"))  return QObject::tr("Occitan");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("om"))  return QObject::tr("Oromo");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("or"))  return QObject::tr("Oriya");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("pa"))  return QObject::tr("Punjabi");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("pl"))  return QObject::tr("Polish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ps"))  return QObject::tr("Pashto");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("pt"))  return QObject::tr("Portuguese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("qu"))  return QObject::tr("Quechua");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("rm"))  return QObject::tr("Rhaeto-Romance");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("rn"))  return QObject::tr("Kirundi");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ro"))  return QObject::tr("Romanian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ru"))  return QObject::tr("Russian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("rw"))  return QObject::tr("Kinyarwanda");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sa"))  return QObject::tr("Sanskrit");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sd"))  return QObject::tr("Sindhi");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sg"))  return QObject::tr("Sangro");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sh"))  return QObject::tr("Serbo-Croatian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("si"))  return QObject::tr("Singhalese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sk"))  return QObject::tr("Slovak");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sl"))  return QObject::tr("Slovenian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sm"))  return QObject::tr("Samoan");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sn"))  return QObject::tr("Shona");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("so"))  return QObject::tr("Somali");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sq"))  return QObject::tr("Albanian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sr"))  return QObject::tr("Serbian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ss"))  return QObject::tr("Siswati");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("st"))  return QObject::tr("Sesotho");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("su"))  return QObject::tr("Sudanese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sv"))  return QObject::tr("Swedish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sw"))  return QObject::tr("Swahili");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ta"))  return QObject::tr("Tamil");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("te"))  return QObject::tr("Tegulu");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tg"))  return QObject::tr("Tajik");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("th"))  return QObject::tr("Thai");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ti"))  return QObject::tr("Tigrinya");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tk"))  return QObject::tr("Turkmen");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tl"))  return QObject::tr("Tagalog");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tn"))  return QObject::tr("Setswana");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("to"))  return QObject::tr("Tonga");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tr"))  return QObject::tr("Turkish");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ts"))  return QObject::tr("Tsonga");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tt"))  return QObject::tr("Tatar");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tw"))  return QObject::tr("Twi");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("uk"))  return QObject::tr("Ukrainian");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ur"))  return QObject::tr("Urdu");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("uz"))  return QObject::tr("Uzbek");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("vi"))  return QObject::tr("Vietnamese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("vo"))  return QObject::tr("Volapuk");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("wo"))  return QObject::tr("Wolof");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("xh"))  return QObject::tr("Xhosa");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("yo"))  return QObject::tr("Yoruba");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("zh"))  return QObject::tr("Chinese");
    else if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("zu"))  return QObject::tr("Zulu");
  }
  else if (langLen == 3)
  {
    if      (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("abk")) return QObject::tr("Abkhazian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ace")) return QObject::tr("Achinese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ach")) return QObject::tr("Acoli");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ada")) return QObject::tr("Adangme");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("aar")) return QObject::tr("Afar");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("afh")) return QObject::tr("Afrihili");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("afr")) return QObject::tr("Afrikaans");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("afa")) return QObject::tr("Afro-Asiatic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("aka")) return QObject::tr("Akan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("akk")) return QObject::tr("Akkadian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("alb")) return QObject::tr("Albanian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sqi")) return QObject::tr("Albanian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ale")) return QObject::tr("Aleut");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("alg")) return QObject::tr("Algonquian languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tut")) return QObject::tr("Altaic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("amh")) return QObject::tr("Amharic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("apa")) return QObject::tr("Apache languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ara")) return QObject::tr("Arabic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arc")) return QObject::tr("Aramaic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arp")) return QObject::tr("Arapaho");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arn")) return QObject::tr("Araucanian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arw")) return QObject::tr("Arawak");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arm")) return QObject::tr("Armenian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hye")) return QObject::tr("Armenian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("art")) return QObject::tr("Artificial (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("asm")) return QObject::tr("Assamese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ath")) return QObject::tr("Athapascan languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("map")) return QObject::tr("Austronesian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ava")) return QObject::tr("Avaric");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ave")) return QObject::tr("Avestan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("awa")) return QObject::tr("Awadhi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("aym")) return QObject::tr("Aymara");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("aze")) return QObject::tr("Azerbaijani");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nah")) return QObject::tr("Aztec");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ban")) return QObject::tr("Balinese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bat")) return QObject::tr("Baltic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bal")) return QObject::tr("Baluchi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bam")) return QObject::tr("Bambara");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bai")) return QObject::tr("Bamileke languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bad")) return QObject::tr("Banda");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bnt")) return QObject::tr("Bantu (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bas")) return QObject::tr("Basa");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bak")) return QObject::tr("Bashkir");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("baq")) return QObject::tr("Basque");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("eus")) return QObject::tr("Basque");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bej")) return QObject::tr("Beja");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bem")) return QObject::tr("Bemba");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ben")) return QObject::tr("Bengali");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ber")) return QObject::tr("Berber (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bho")) return QObject::tr("Bhojpuri");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bih")) return QObject::tr("Bihari");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bik")) return QObject::tr("Bikol");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bin")) return QObject::tr("Bini");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bis")) return QObject::tr("Bislama");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bra")) return QObject::tr("Braj");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bre")) return QObject::tr("Breton");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bug")) return QObject::tr("Buginese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bul")) return QObject::tr("Bulgarian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bua")) return QObject::tr("Buriat");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bur")) return QObject::tr("Burmese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mya")) return QObject::tr("Burmese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bel")) return QObject::tr("Byelorussian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cad")) return QObject::tr("Caddo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("car")) return QObject::tr("Carib");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cat")) return QObject::tr("Catalan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cau")) return QObject::tr("Caucasian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ceb")) return QObject::tr("Cebuano");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cel")) return QObject::tr("Celtic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cai")) return QObject::tr("Central American Indian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chg")) return QObject::tr("Chagatai");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cha")) return QObject::tr("Chamorro");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("che")) return QObject::tr("Chechen");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chr")) return QObject::tr("Cherokee");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chy")) return QObject::tr("Cheyenne");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chb")) return QObject::tr("Chibcha");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chi")) return QObject::tr("Chinese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zho")) return QObject::tr("Chinese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chn")) return QObject::tr("Chinook jargon");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cho")) return QObject::tr("Choctaw");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chu")) return QObject::tr("Church Slavic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chv")) return QObject::tr("Chuvash");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cop")) return QObject::tr("Coptic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cor")) return QObject::tr("Cornish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cos")) return QObject::tr("Corsican");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cre")) return QObject::tr("Cree");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mus")) return QObject::tr("Creek");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("crp")) return QObject::tr("Creoles and Pidgins (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cpe")) return QObject::tr("Creoles and Pidgins, English-based (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cpf")) return QObject::tr("Creoles and Pidgins, French-based (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cpp")) return QObject::tr("Creoles and Pidgins, Portuguese-based (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cus")) return QObject::tr("Cushitic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ces")) return QObject::tr("Czech");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cze")) return QObject::tr("Czech");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dak")) return QObject::tr("Dakota");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dan")) return QObject::tr("Danish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("del")) return QObject::tr("Delaware");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("din")) return QObject::tr("Dinka");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("div")) return QObject::tr("Divehi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("doi")) return QObject::tr("Dogri");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dra")) return QObject::tr("Dravidian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dua")) return QObject::tr("Duala");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dut")) return QObject::tr("Dutch");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nla")) return QObject::tr("Dutch");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dum")) return QObject::tr("Dutch, Middle (ca. 1050-1350)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dyu")) return QObject::tr("Dyula");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dzo")) return QObject::tr("Dzongkha");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("efi")) return QObject::tr("Efik");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("egy")) return QObject::tr("Egyptian (Ancient)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("eka")) return QObject::tr("Ekajuk");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("elx")) return QObject::tr("Elamite");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("eng")) return QObject::tr("English");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("enm")) return QObject::tr("English, Middle (ca. 1100-1500)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ang")) return QObject::tr("English, Old (ca. 450-1100)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("esk")) return QObject::tr("Eskimo (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("epo")) return QObject::tr("Esperanto");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("est")) return QObject::tr("Estonian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ewe")) return QObject::tr("Ewe");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ewo")) return QObject::tr("Ewondo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fan")) return QObject::tr("Fang");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fat")) return QObject::tr("Fanti");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fao")) return QObject::tr("Faroese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fij")) return QObject::tr("Fijian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fin")) return QObject::tr("Finnish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fiu")) return QObject::tr("Finno-Ugrian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fon")) return QObject::tr("Fon");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fra")) return QObject::tr("French");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fre")) return QObject::tr("French");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("frm")) return QObject::tr("French, Middle (ca. 1400-1600)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fro")) return QObject::tr("French, Old (842- ca. 1400)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fry")) return QObject::tr("Frisian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ful")) return QObject::tr("Fulah");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gaa")) return QObject::tr("Ga");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gae")) return QObject::tr("Gaelic (Scots)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gdh")) return QObject::tr("Gaelic (Scots)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("glg")) return QObject::tr("Gallegan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lug")) return QObject::tr("Ganda");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gay")) return QObject::tr("Gayo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gez")) return QObject::tr("Geez");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("geo")) return QObject::tr("Georgian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kat")) return QObject::tr("Georgian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("deu")) return QObject::tr("German");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ger")) return QObject::tr("German");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gmh")) return QObject::tr("German, Middle High (ca. 1050-1500)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("goh")) return QObject::tr("German, Old High (ca. 750-1050)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gem")) return QObject::tr("Germanic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gil")) return QObject::tr("Gilbertese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gon")) return QObject::tr("Gondi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("got")) return QObject::tr("Gothic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("grb")) return QObject::tr("Grebo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("grc")) return QObject::tr("Greek, Ancient (to 1453)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ell")) return QObject::tr("Greek, Modern (1453-)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gre")) return QObject::tr("Greek, Modern (1453-)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kal")) return QObject::tr("Greenlandic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("grn")) return QObject::tr("Guarani");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("guj")) return QObject::tr("Gujarati");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hai")) return QObject::tr("Haida");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hau")) return QObject::tr("Hausa");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("haw")) return QObject::tr("Hawaiian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("heb")) return QObject::tr("Hebrew");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("her")) return QObject::tr("Herero");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hil")) return QObject::tr("Hiligaynon");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("him")) return QObject::tr("Himachali");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hin")) return QObject::tr("Hindi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hmo")) return QObject::tr("Hiri Motu");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hun")) return QObject::tr("Hungarian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hup")) return QObject::tr("Hupa");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("iba")) return QObject::tr("Iban");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ice")) return QObject::tr("Icelandic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("isl")) return QObject::tr("Icelandic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ibo")) return QObject::tr("Igbo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ijo")) return QObject::tr("Ijo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ilo")) return QObject::tr("Iloko");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("inc")) return QObject::tr("Indic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ine")) return QObject::tr("Indo-European (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ind")) return QObject::tr("Indonesian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ina")) return QObject::tr("Interlingua (International Auxiliary language Association)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ine")) return QObject::tr("Interlingue");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("iku")) return QObject::tr("Inuktitut");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ipk")) return QObject::tr("Inupiak");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ira")) return QObject::tr("Iranian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gai")) return QObject::tr("Irish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("iri")) return QObject::tr("Irish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sga")) return QObject::tr("Irish, Old (to 900)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mga")) return QObject::tr("Irish, Middle (900 - 1200)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("iro")) return QObject::tr("Iroquoian languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ita")) return QObject::tr("Italian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jpn")) return QObject::tr("Japanese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jav")) return QObject::tr("Javanese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jaw")) return QObject::tr("Javanese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jrb")) return QObject::tr("Judeo-Arabic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jpr")) return QObject::tr("Judeo-Persian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kab")) return QObject::tr("Kabyle");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kac")) return QObject::tr("Kachin");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kam")) return QObject::tr("Kamba");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kan")) return QObject::tr("Kannada");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kau")) return QObject::tr("Kanuri");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kaa")) return QObject::tr("Kara-Kalpak");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kar")) return QObject::tr("Karen");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kas")) return QObject::tr("Kashmiri");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kaw")) return QObject::tr("Kawi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kaz")) return QObject::tr("Kazakh");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kha")) return QObject::tr("Khasi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("khm")) return QObject::tr("Khmer");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("khi")) return QObject::tr("Khoisan (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kho")) return QObject::tr("Khotanese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kik")) return QObject::tr("Kikuyu");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kin")) return QObject::tr("Kinyarwanda");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kir")) return QObject::tr("Kirghiz");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kom")) return QObject::tr("Komi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kon")) return QObject::tr("Kongo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kok")) return QObject::tr("Konkani");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kor")) return QObject::tr("Korean");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kpe")) return QObject::tr("Kpelle");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kro")) return QObject::tr("Kru");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kua")) return QObject::tr("Kuanyama");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kum")) return QObject::tr("Kumyk");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kur")) return QObject::tr("Kurdish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kru")) return QObject::tr("Kurukh");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kus")) return QObject::tr("Kusaie");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kut")) return QObject::tr("Kutenai");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lad")) return QObject::tr("Ladino");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lah")) return QObject::tr("Lahnda");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lam")) return QObject::tr("Lamba");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("oci")) return QObject::tr("Langue d'Oc (post 1500)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lao")) return QObject::tr("Lao");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lat")) return QObject::tr("Latin");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lav")) return QObject::tr("Latvian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ltz")) return QObject::tr("Letzeburgesch");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lez")) return QObject::tr("Lezghian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lin")) return QObject::tr("Lingala");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lit")) return QObject::tr("Lithuanian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("loz")) return QObject::tr("Lozi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lub")) return QObject::tr("Luba-Katanga");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lui")) return QObject::tr("Luiseno");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lun")) return QObject::tr("Lunda");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("luo")) return QObject::tr("Luo (Kenya and Tanzania)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mac")) return QObject::tr("Macedonian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mak")) return QObject::tr("Macedonian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mad")) return QObject::tr("Madurese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mag")) return QObject::tr("Magahi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mai")) return QObject::tr("Maithili");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mak")) return QObject::tr("Makasar");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mlg")) return QObject::tr("Malagasy");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("may")) return QObject::tr("Malay");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("msa")) return QObject::tr("Malay");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mal")) return QObject::tr("Malayalam");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mlt")) return QObject::tr("Maltese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("man")) return QObject::tr("Mandingo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mni")) return QObject::tr("Manipuri");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mno")) return QObject::tr("Manobo languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("max")) return QObject::tr("Manx");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mao")) return QObject::tr("Maori");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mri")) return QObject::tr("Maori");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mar")) return QObject::tr("Marathi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chm")) return QObject::tr("Mari");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mah")) return QObject::tr("Marshall");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mwr")) return QObject::tr("Marwari");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mas")) return QObject::tr("Masai");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("myn")) return QObject::tr("Mayan languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("men")) return QObject::tr("Mende");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mic")) return QObject::tr("Micmac");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("min")) return QObject::tr("Minangkabau");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mis")) return QObject::tr("Miscellaneous (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("moh")) return QObject::tr("Mohawk");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mol")) return QObject::tr("Moldavian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mkh")) return QObject::tr("Mon-Kmer (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lol")) return QObject::tr("Mongo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mon")) return QObject::tr("Mongolian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mos")) return QObject::tr("Mossi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mul")) return QObject::tr("Multiple languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mun")) return QObject::tr("Munda languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nau")) return QObject::tr("Nauru");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nav")) return QObject::tr("Navajo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nde")) return QObject::tr("Ndebele, North");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nbl")) return QObject::tr("Ndebele, South");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ndo")) return QObject::tr("Ndongo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nep")) return QObject::tr("Nepali");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("new")) return QObject::tr("Newari");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nic")) return QObject::tr("Niger-Kordofanian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ssa")) return QObject::tr("Nilo-Saharan (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("niu")) return QObject::tr("Niuean");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("non")) return QObject::tr("Norse, Old");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nai")) return QObject::tr("North American Indian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nor")) return QObject::tr("Norwegian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nno")) return QObject::tr("Norwegian (Nynorsk)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nub")) return QObject::tr("Nubian languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nym")) return QObject::tr("Nyamwezi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nya")) return QObject::tr("Nyanja");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nyn")) return QObject::tr("Nyankole");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nyo")) return QObject::tr("Nyoro");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nzi")) return QObject::tr("Nzima");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("oji")) return QObject::tr("Ojibwa");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ori")) return QObject::tr("Oriya");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("orm")) return QObject::tr("Oromo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("osa")) return QObject::tr("Osage");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("oss")) return QObject::tr("Ossetic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("oto")) return QObject::tr("Otomian languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pal")) return QObject::tr("Pahlavi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pau")) return QObject::tr("Palauan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pli")) return QObject::tr("Pali");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pam")) return QObject::tr("Pampanga");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pag")) return QObject::tr("Pangasinan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pan")) return QObject::tr("Panjabi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pap")) return QObject::tr("Papiamento");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("paa")) return QObject::tr("Papuan-Australian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fas")) return QObject::tr("Persian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("per")) return QObject::tr("Persian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("peo")) return QObject::tr("Persian, Old (ca 600 - 400 B.C.)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("phn")) return QObject::tr("Phoenician");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pol")) return QObject::tr("Polish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pon")) return QObject::tr("Ponape");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("por")) return QObject::tr("Portuguese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pra")) return QObject::tr("Prakrit languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pro")) return QObject::tr("Provencal, Old (to 1500)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pus")) return QObject::tr("Pushto");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("que")) return QObject::tr("Quechua");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("roh")) return QObject::tr("Rhaeto-Romance");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("raj")) return QObject::tr("Rajasthani");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("rar")) return QObject::tr("Rarotongan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("roa")) return QObject::tr("Romance (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ron")) return QObject::tr("Romanian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("rum")) return QObject::tr("Romanian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("rom")) return QObject::tr("Romany");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("run")) return QObject::tr("Rundi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("rus")) return QObject::tr("Russian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sal")) return QObject::tr("Salishan languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sam")) return QObject::tr("Samaritan Aramaic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("smi")) return QObject::tr("Sami languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("smo")) return QObject::tr("Samoan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sad")) return QObject::tr("Sandawe");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sag")) return QObject::tr("Sango");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("san")) return QObject::tr("Sanskrit");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("srd")) return QObject::tr("Sardinian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sco")) return QObject::tr("Scots");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sel")) return QObject::tr("Selkup");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sem")) return QObject::tr("Semitic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("scr")) return QObject::tr("Serbo-Croatian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("srr")) return QObject::tr("Serer");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("shn")) return QObject::tr("Shan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sna")) return QObject::tr("Shona");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sid")) return QObject::tr("Sidamo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bla")) return QObject::tr("Siksika");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("snd")) return QObject::tr("Sindhi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sin")) return QObject::tr("Singhalese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sit")) return QObject::tr("Sino-Tibetan (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sio")) return QObject::tr("Siouan languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sla")) return QObject::tr("Slavic (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ssw")) return QObject::tr("Siswant");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("slk")) return QObject::tr("Slovak");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("slo")) return QObject::tr("Slovak");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("slv")) return QObject::tr("Slovenian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sog")) return QObject::tr("Sogdian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("som")) return QObject::tr("Somali");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("son")) return QObject::tr("Songhai");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wen")) return QObject::tr("Sorbian languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nso")) return QObject::tr("Sotho, Northern");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sot")) return QObject::tr("Sotho, Southern");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sai")) return QObject::tr("South American Indian (Other)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("esl")) return QObject::tr("Spanish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("spa")) return QObject::tr("Spanish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("suk")) return QObject::tr("Sukuma");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sux")) return QObject::tr("Sumerian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sun")) return QObject::tr("Sudanese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sus")) return QObject::tr("Susu");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("swa")) return QObject::tr("Swahili");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ssw")) return QObject::tr("Swazi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sve")) return QObject::tr("Swedish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("swe")) return QObject::tr("Swedish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("syr")) return QObject::tr("Syriac");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tgl")) return QObject::tr("Tagalog");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tah")) return QObject::tr("Tahitian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tgk")) return QObject::tr("Tajik");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tmh")) return QObject::tr("Tamashek");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tam")) return QObject::tr("Tamil");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tat")) return QObject::tr("Tatar");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tel")) return QObject::tr("Telugu");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ter")) return QObject::tr("Tereno");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tha")) return QObject::tr("Thai");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bod")) return QObject::tr("Tibetan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tib")) return QObject::tr("Tibetan");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tig")) return QObject::tr("Tigre");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tir")) return QObject::tr("Tigrinya");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tem")) return QObject::tr("Timne");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tiv")) return QObject::tr("Tivi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tli")) return QObject::tr("Tlingit");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tog")) return QObject::tr("Tonga (Nyasa)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ton")) return QObject::tr("Tonga (Tonga Islands)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tru")) return QObject::tr("Truk");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tsi")) return QObject::tr("Tsimshian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tso")) return QObject::tr("Tsonga");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tsn")) return QObject::tr("Tswana");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tum")) return QObject::tr("Tumbuka");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tur")) return QObject::tr("Turkish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ota")) return QObject::tr("Turkish, Ottoman (1500 - 1928)");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tuk")) return QObject::tr("Turkmen");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tyv")) return QObject::tr("Tuvinian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("twi")) return QObject::tr("Twi");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("uga")) return QObject::tr("Ugaritic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("uig")) return QObject::tr("Uighur");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ukr")) return QObject::tr("Ukrainian");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("umb")) return QObject::tr("Umbundu");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("und")) return QObject::tr("Undetermined");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("urd")) return QObject::tr("Urdu");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("uzb")) return QObject::tr("Uzbek");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("vai")) return QObject::tr("Vai");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ven")) return QObject::tr("Venda");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("vie")) return QObject::tr("Vietnamese");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("vol")) return QObject::tr("Volapük");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("vot")) return QObject::tr("Votic");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wak")) return QObject::tr("Wakashan languages");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wal")) return QObject::tr("Walamo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("war")) return QObject::tr("Waray");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("was")) return QObject::tr("Washo");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cym")) return QObject::tr("Welsh");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wel")) return QObject::tr("Welsh");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wol")) return QObject::tr("Wolof");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("xho")) return QObject::tr("Xhosa");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sah")) return QObject::tr("Yakut");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("yao")) return QObject::tr("Yao");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("yap")) return QObject::tr("Yap");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("yid")) return QObject::tr("Yiddish");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("yor")) return QObject::tr("Yoruba");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zap")) return QObject::tr("Zapotec");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zen")) return QObject::tr("Zenaga");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zha")) return QObject::tr("Zhuang");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zul")) return QObject::tr("Zulu");
    else if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zun")) return QObject::tr("Zuni");
  }

  return lang;
}


} // End of namespaces
