/***************************************************************************
 *   Copyright (C) 2010 by A.J. Admiraal                                   *
 *   code@admiraal.dds.nl                                                  *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License version 2 as     *
 *   published by the Free Software Foundation.                            *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.           *
 ***************************************************************************/

#include "sstringparser.h"

namespace LXiCore {

/*! Returns the translated language name for the ISO 639-1 or ISO 639-2 language
    code.
 */
QString SStringParser::iso639Language(const char *lang)
{
  const int langLen = qstrnlen(lang, 4);

  if (langLen == 2)
  {
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("aa"))		return QObject::tr("Afar");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ab"))   return QObject::tr("Abkhazian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("af"))   return QObject::tr("Afrikaans");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("am"))   return QObject::tr("Amharic");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ar"))   return QObject::tr("Arabic");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("as"))   return QObject::tr("Assamese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ay"))   return QObject::tr("Aymara");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("az"))   return QObject::tr("Azerbaijani");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ba"))   return QObject::tr("Bashkir");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("be"))   return QObject::tr("Byelorussian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bg"))   return QObject::tr("Bulgarian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bh"))   return QObject::tr("Bihari");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bi"))   return QObject::tr("Bislama");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bn"))   return QObject::tr("Bengali");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("bo"))   return QObject::tr("Tibetan");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("br"))   return QObject::tr("Breton");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ca"))   return QObject::tr("Catalan");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("co"))   return QObject::tr("Corsican");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("cs"))   return QObject::tr("Czech");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("cy"))   return QObject::tr("Welsh");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("da"))   return QObject::tr("Danish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("de"))   return QObject::tr("German");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("dz"))   return QObject::tr("Bhutani");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("el"))   return QObject::tr("Greek");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("en"))   return QObject::tr("English");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("eo"))   return QObject::tr("Esperanto");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("es"))   return QObject::tr("Spanish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("et"))   return QObject::tr("Estonian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("eu"))   return QObject::tr("Basque");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fa"))   return QObject::tr("Persian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fi"))   return QObject::tr("Finnish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fj"))   return QObject::tr("Fiji");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fo"))   return QObject::tr("Faeroese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fr"))   return QObject::tr("French");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("fy"))   return QObject::tr("Frisian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ga"))   return QObject::tr("Irish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("gd"))   return QObject::tr("Gaelic");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("gl"))   return QObject::tr("Galician");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("gn"))   return QObject::tr("Guarani");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("gu"))   return QObject::tr("Gujarati");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ha"))   return QObject::tr("Hausa");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("hi"))   return QObject::tr("Hindi");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("hr"))   return QObject::tr("Croatian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("hu"))   return QObject::tr("Hungarian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("hy"))   return QObject::tr("Armenian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ia"))   return QObject::tr("Interlingua");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ie"))   return QObject::tr("Interlingue");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ik"))   return QObject::tr("Inupiak");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("in"))   return QObject::tr("Indonesian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("is"))   return QObject::tr("Icelandic");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("it"))   return QObject::tr("Italian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("iw"))   return QObject::tr("Hebrew");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ja"))   return QObject::tr("Japanese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ji"))   return QObject::tr("Yiddish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("jw"))   return QObject::tr("Javanese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ka"))   return QObject::tr("Georgian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("kk"))   return QObject::tr("Kazakh");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("kl"))   return QObject::tr("Greenlandic");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("km"))   return QObject::tr("Cambodian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("kn"))   return QObject::tr("Kannada");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ko"))   return QObject::tr("Korean");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ks"))   return QObject::tr("Kashmiri");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ku"))   return QObject::tr("Kurdish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ky"))   return QObject::tr("Kirghiz");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("la"))   return QObject::tr("Latin");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ln"))   return QObject::tr("Lingala");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("lo"))   return QObject::tr("Laothian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("lt"))   return QObject::tr("Lithuanian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("lv"))   return QObject::tr("Latvian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mg"))   return QObject::tr("Malagasy");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mi"))   return QObject::tr("Maori");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mk"))   return QObject::tr("Macedonian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ml"))   return QObject::tr("Malayalam");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mn"))   return QObject::tr("Mongolian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mo"))   return QObject::tr("Moldavian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mr"))   return QObject::tr("Marathi");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ms"))   return QObject::tr("Malay");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("mt"))   return QObject::tr("Maltese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("my"))   return QObject::tr("Burmese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("na"))   return QObject::tr("Nauru");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ne"))   return QObject::tr("Nepali");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("nl"))   return QObject::tr("Dutch");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("no"))   return QObject::tr("Norwegian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("oc"))   return QObject::tr("Occitan");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("om"))   return QObject::tr("Oromo");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("or"))   return QObject::tr("Oriya");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("pa"))   return QObject::tr("Punjabi");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("pl"))   return QObject::tr("Polish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ps"))   return QObject::tr("Pashto");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("pt"))   return QObject::tr("Portuguese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("qu"))   return QObject::tr("Quechua");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("rm"))   return QObject::tr("Rhaeto-Romance");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("rn"))   return QObject::tr("Kirundi");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ro"))   return QObject::tr("Romanian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ru"))   return QObject::tr("Russian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("rw"))   return QObject::tr("Kinyarwanda");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sa"))   return QObject::tr("Sanskrit");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sd"))   return QObject::tr("Sindhi");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sg"))   return QObject::tr("Sangro");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sh"))   return QObject::tr("Serbo-Croatian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("si"))   return QObject::tr("Singhalese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sk"))   return QObject::tr("Slovak");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sl"))   return QObject::tr("Slovenian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sm"))   return QObject::tr("Samoan");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sn"))   return QObject::tr("Shona");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("so"))   return QObject::tr("Somali");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sq"))   return QObject::tr("Albanian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sr"))   return QObject::tr("Serbian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ss"))   return QObject::tr("Siswati");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("st"))   return QObject::tr("Sesotho");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("su"))   return QObject::tr("Sudanese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sv"))   return QObject::tr("Swedish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("sw"))   return QObject::tr("Swahili");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ta"))   return QObject::tr("Tamil");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("te"))   return QObject::tr("Tegulu");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tg"))   return QObject::tr("Tajik");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("th"))   return QObject::tr("Thai");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ti"))   return QObject::tr("Tigrinya");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tk"))   return QObject::tr("Turkmen");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tl"))   return QObject::tr("Tagalog");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tn"))   return QObject::tr("Setswana");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("to"))   return QObject::tr("Tonga");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tr"))   return QObject::tr("Turkish");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ts"))   return QObject::tr("Tsonga");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tt"))   return QObject::tr("Tatar");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("tw"))   return QObject::tr("Twi");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("uk"))   return QObject::tr("Ukrainian");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("ur"))   return QObject::tr("Urdu");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("uz"))   return QObject::tr("Uzbek");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("vi"))   return QObject::tr("Vietnamese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("vo"))   return QObject::tr("Volapuk");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("wo"))   return QObject::tr("Wolof");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("xh"))   return QObject::tr("Xhosa");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("yo"))   return QObject::tr("Yoruba");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("zh"))   return QObject::tr("Chinese");
    if (*reinterpret_cast<const quint16 *>(lang) == *reinterpret_cast<const quint16 *>("zu"))   return QObject::tr("Zulu");
  }
  else if (langLen == 3)
  {
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("abk"))  return QObject::tr("Abkhazian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ace"))  return QObject::tr("Achinese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ach"))  return QObject::tr("Acoli");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ada"))  return QObject::tr("Adangme");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("aar"))  return QObject::tr("Afar");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("afh"))  return QObject::tr("Afrihili");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("afr"))  return QObject::tr("Afrikaans");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("afa"))  return QObject::tr("Afro-Asiatic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("aka"))  return QObject::tr("Akan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("akk"))  return QObject::tr("Akkadian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("alb"))  return QObject::tr("Albanian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sqi"))  return QObject::tr("Albanian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ale"))  return QObject::tr("Aleut");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("alg"))  return QObject::tr("Algonquian languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tut"))  return QObject::tr("Altaic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("amh"))  return QObject::tr("Amharic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("apa"))  return QObject::tr("Apache languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ara"))  return QObject::tr("Arabic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arc"))  return QObject::tr("Aramaic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arp"))  return QObject::tr("Arapaho");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arn"))  return QObject::tr("Araucanian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arw"))  return QObject::tr("Arawak");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("arm"))  return QObject::tr("Armenian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hye"))  return QObject::tr("Armenian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("art"))  return QObject::tr("Artificial (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("asm"))  return QObject::tr("Assamese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ath"))  return QObject::tr("Athapascan languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("map"))  return QObject::tr("Austronesian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ava"))  return QObject::tr("Avaric");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ave"))  return QObject::tr("Avestan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("awa"))  return QObject::tr("Awadhi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("aym"))  return QObject::tr("Aymara");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("aze"))  return QObject::tr("Azerbaijani");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nah"))  return QObject::tr("Aztec");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ban"))  return QObject::tr("Balinese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bat"))  return QObject::tr("Baltic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bal"))  return QObject::tr("Baluchi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bam"))  return QObject::tr("Bambara");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bai"))  return QObject::tr("Bamileke languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bad"))  return QObject::tr("Banda");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bnt"))  return QObject::tr("Bantu (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bas"))  return QObject::tr("Basa");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bak"))  return QObject::tr("Bashkir");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("baq"))  return QObject::tr("Basque");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("eus"))  return QObject::tr("Basque");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bej"))  return QObject::tr("Beja");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bem"))  return QObject::tr("Bemba");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ben"))  return QObject::tr("Bengali");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ber"))  return QObject::tr("Berber (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bho"))  return QObject::tr("Bhojpuri");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bih"))  return QObject::tr("Bihari");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bik"))  return QObject::tr("Bikol");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bin"))  return QObject::tr("Bini");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bis"))  return QObject::tr("Bislama");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bra"))  return QObject::tr("Braj");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bre"))  return QObject::tr("Breton");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bug"))  return QObject::tr("Buginese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bul"))  return QObject::tr("Bulgarian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bua"))  return QObject::tr("Buriat");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bur"))  return QObject::tr("Burmese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mya"))  return QObject::tr("Burmese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bel"))  return QObject::tr("Byelorussian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cad"))  return QObject::tr("Caddo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("car"))  return QObject::tr("Carib");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cat"))  return QObject::tr("Catalan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cau"))  return QObject::tr("Caucasian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ceb"))  return QObject::tr("Cebuano");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cel"))  return QObject::tr("Celtic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cai"))  return QObject::tr("Central American Indian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chg"))  return QObject::tr("Chagatai");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cha"))  return QObject::tr("Chamorro");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("che"))  return QObject::tr("Chechen");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chr"))  return QObject::tr("Cherokee");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chy"))  return QObject::tr("Cheyenne");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chb"))  return QObject::tr("Chibcha");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chi"))  return QObject::tr("Chinese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zho"))  return QObject::tr("Chinese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chn"))  return QObject::tr("Chinook jargon");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cho"))  return QObject::tr("Choctaw");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chu"))  return QObject::tr("Church Slavic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chv"))  return QObject::tr("Chuvash");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cop"))  return QObject::tr("Coptic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cor"))  return QObject::tr("Cornish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cos"))  return QObject::tr("Corsican");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cre"))  return QObject::tr("Cree");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mus"))  return QObject::tr("Creek");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("crp"))  return QObject::tr("Creoles and Pidgins (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cpe"))  return QObject::tr("Creoles and Pidgins, English-based (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cpf"))  return QObject::tr("Creoles and Pidgins, French-based (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cpp"))  return QObject::tr("Creoles and Pidgins, Portuguese-based (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cus"))  return QObject::tr("Cushitic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ces"))  return QObject::tr("Czech");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cze"))  return QObject::tr("Czech");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dak"))  return QObject::tr("Dakota");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dan"))  return QObject::tr("Danish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("del"))  return QObject::tr("Delaware");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("din"))  return QObject::tr("Dinka");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("div"))  return QObject::tr("Divehi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("doi"))  return QObject::tr("Dogri");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dra"))  return QObject::tr("Dravidian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dua"))  return QObject::tr("Duala");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dut"))  return QObject::tr("Dutch");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nla"))  return QObject::tr("Dutch");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dum"))  return QObject::tr("Dutch, Middle (ca. 1050-1350)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dyu"))  return QObject::tr("Dyula");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("dzo"))  return QObject::tr("Dzongkha");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("efi"))  return QObject::tr("Efik");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("egy"))  return QObject::tr("Egyptian (Ancient)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("eka"))  return QObject::tr("Ekajuk");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("elx"))  return QObject::tr("Elamite");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("eng"))  return QObject::tr("English");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("enm"))  return QObject::tr("English, Middle (ca. 1100-1500)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ang"))  return QObject::tr("English, Old (ca. 450-1100)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("esk"))  return QObject::tr("Eskimo (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("epo"))  return QObject::tr("Esperanto");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("est"))  return QObject::tr("Estonian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ewe"))  return QObject::tr("Ewe");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ewo"))  return QObject::tr("Ewondo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fan"))  return QObject::tr("Fang");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fat"))  return QObject::tr("Fanti");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fao"))  return QObject::tr("Faroese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fij"))  return QObject::tr("Fijian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fin"))  return QObject::tr("Finnish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fiu"))  return QObject::tr("Finno-Ugrian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fon"))  return QObject::tr("Fon");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fra"))  return QObject::tr("French");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fre"))  return QObject::tr("French");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("frm"))  return QObject::tr("French, Middle (ca. 1400-1600)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fro"))  return QObject::tr("French, Old (842- ca. 1400)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fry"))  return QObject::tr("Frisian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ful"))  return QObject::tr("Fulah");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gaa"))  return QObject::tr("Ga");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gae"))  return QObject::tr("Gaelic (Scots)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gdh"))  return QObject::tr("Gaelic (Scots)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("glg"))  return QObject::tr("Gallegan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lug"))  return QObject::tr("Ganda");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gay"))  return QObject::tr("Gayo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gez"))  return QObject::tr("Geez");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("geo"))  return QObject::tr("Georgian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kat"))  return QObject::tr("Georgian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("deu"))  return QObject::tr("German");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ger"))  return QObject::tr("German");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gmh"))  return QObject::tr("German, Middle High (ca. 1050-1500)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("goh"))  return QObject::tr("German, Old High (ca. 750-1050)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gem"))  return QObject::tr("Germanic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gil"))  return QObject::tr("Gilbertese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gon"))  return QObject::tr("Gondi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("got"))  return QObject::tr("Gothic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("grb"))  return QObject::tr("Grebo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("grc"))  return QObject::tr("Greek, Ancient (to 1453)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ell"))  return QObject::tr("Greek, Modern (1453-)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gre"))  return QObject::tr("Greek, Modern (1453-)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kal"))  return QObject::tr("Greenlandic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("grn"))  return QObject::tr("Guarani");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("guj"))  return QObject::tr("Gujarati");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hai"))  return QObject::tr("Haida");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hau"))  return QObject::tr("Hausa");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("haw"))  return QObject::tr("Hawaiian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("heb"))  return QObject::tr("Hebrew");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("her"))  return QObject::tr("Herero");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hil"))  return QObject::tr("Hiligaynon");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("him"))  return QObject::tr("Himachali");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hin"))  return QObject::tr("Hindi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hmo"))  return QObject::tr("Hiri Motu");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hun"))  return QObject::tr("Hungarian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("hup"))  return QObject::tr("Hupa");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("iba"))  return QObject::tr("Iban");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ice"))  return QObject::tr("Icelandic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("isl"))  return QObject::tr("Icelandic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ibo"))  return QObject::tr("Igbo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ijo"))  return QObject::tr("Ijo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ilo"))  return QObject::tr("Iloko");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("inc"))  return QObject::tr("Indic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ine"))  return QObject::tr("Indo-European (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ind"))  return QObject::tr("Indonesian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ina"))  return QObject::tr("Interlingua (International Auxiliary language Association)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ine"))  return QObject::tr("Interlingue");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("iku"))  return QObject::tr("Inuktitut");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ipk"))  return QObject::tr("Inupiak");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ira"))  return QObject::tr("Iranian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("gai"))  return QObject::tr("Irish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("iri"))  return QObject::tr("Irish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sga"))  return QObject::tr("Irish, Old (to 900)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mga"))  return QObject::tr("Irish, Middle (900 - 1200)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("iro"))  return QObject::tr("Iroquoian languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ita"))  return QObject::tr("Italian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jpn"))  return QObject::tr("Japanese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jav"))  return QObject::tr("Javanese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jaw"))  return QObject::tr("Javanese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jrb"))  return QObject::tr("Judeo-Arabic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("jpr"))  return QObject::tr("Judeo-Persian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kab"))  return QObject::tr("Kabyle");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kac"))  return QObject::tr("Kachin");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kam"))  return QObject::tr("Kamba");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kan"))  return QObject::tr("Kannada");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kau"))  return QObject::tr("Kanuri");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kaa"))  return QObject::tr("Kara-Kalpak");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kar"))  return QObject::tr("Karen");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kas"))  return QObject::tr("Kashmiri");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kaw"))  return QObject::tr("Kawi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kaz"))  return QObject::tr("Kazakh");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kha"))  return QObject::tr("Khasi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("khm"))  return QObject::tr("Khmer");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("khi"))  return QObject::tr("Khoisan (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kho"))  return QObject::tr("Khotanese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kik"))  return QObject::tr("Kikuyu");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kin"))  return QObject::tr("Kinyarwanda");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kir"))  return QObject::tr("Kirghiz");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kom"))  return QObject::tr("Komi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kon"))  return QObject::tr("Kongo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kok"))  return QObject::tr("Konkani");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kor"))  return QObject::tr("Korean");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kpe"))  return QObject::tr("Kpelle");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kro"))  return QObject::tr("Kru");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kua"))  return QObject::tr("Kuanyama");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kum"))  return QObject::tr("Kumyk");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kur"))  return QObject::tr("Kurdish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kru"))  return QObject::tr("Kurukh");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kus"))  return QObject::tr("Kusaie");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("kut"))  return QObject::tr("Kutenai");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lad"))  return QObject::tr("Ladino");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lah"))  return QObject::tr("Lahnda");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lam"))  return QObject::tr("Lamba");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("oci"))  return QObject::tr("Langue d'Oc (post 1500)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lao"))  return QObject::tr("Lao");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lat"))  return QObject::tr("Latin");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lav"))  return QObject::tr("Latvian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ltz"))  return QObject::tr("Letzeburgesch");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lez"))  return QObject::tr("Lezghian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lin"))  return QObject::tr("Lingala");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lit"))  return QObject::tr("Lithuanian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("loz"))  return QObject::tr("Lozi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lub"))  return QObject::tr("Luba-Katanga");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lui"))  return QObject::tr("Luiseno");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lun"))  return QObject::tr("Lunda");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("luo"))  return QObject::tr("Luo (Kenya and Tanzania)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mac"))  return QObject::tr("Macedonian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mak"))  return QObject::tr("Macedonian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mad"))  return QObject::tr("Madurese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mag"))  return QObject::tr("Magahi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mai"))  return QObject::tr("Maithili");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mak"))  return QObject::tr("Makasar");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mlg"))  return QObject::tr("Malagasy");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("may"))  return QObject::tr("Malay");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("msa"))  return QObject::tr("Malay");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mal"))  return QObject::tr("Malayalam");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mlt"))  return QObject::tr("Maltese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("man"))  return QObject::tr("Mandingo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mni"))  return QObject::tr("Manipuri");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mno"))  return QObject::tr("Manobo languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("max"))  return QObject::tr("Manx");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mao"))  return QObject::tr("Maori");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mri"))  return QObject::tr("Maori");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mar"))  return QObject::tr("Marathi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("chm"))  return QObject::tr("Mari");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mah"))  return QObject::tr("Marshall");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mwr"))  return QObject::tr("Marwari");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mas"))  return QObject::tr("Masai");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("myn"))  return QObject::tr("Mayan languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("men"))  return QObject::tr("Mende");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mic"))  return QObject::tr("Micmac");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("min"))  return QObject::tr("Minangkabau");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mis"))  return QObject::tr("Miscellaneous (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("moh"))  return QObject::tr("Mohawk");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mol"))  return QObject::tr("Moldavian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mkh"))  return QObject::tr("Mon-Kmer (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("lol"))  return QObject::tr("Mongo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mon"))  return QObject::tr("Mongolian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mos"))  return QObject::tr("Mossi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mul"))  return QObject::tr("Multiple languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("mun"))  return QObject::tr("Munda languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nau"))  return QObject::tr("Nauru");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nav"))  return QObject::tr("Navajo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nde"))  return QObject::tr("Ndebele, North");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nbl"))  return QObject::tr("Ndebele, South");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ndo"))  return QObject::tr("Ndongo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nep"))  return QObject::tr("Nepali");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("new"))  return QObject::tr("Newari");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nic"))  return QObject::tr("Niger-Kordofanian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ssa"))  return QObject::tr("Nilo-Saharan (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("niu"))  return QObject::tr("Niuean");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("non"))  return QObject::tr("Norse, Old");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nai"))  return QObject::tr("North American Indian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nor"))  return QObject::tr("Norwegian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nno"))  return QObject::tr("Norwegian (Nynorsk)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nub"))  return QObject::tr("Nubian languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nym"))  return QObject::tr("Nyamwezi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nya"))  return QObject::tr("Nyanja");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nyn"))  return QObject::tr("Nyankole");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nyo"))  return QObject::tr("Nyoro");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nzi"))  return QObject::tr("Nzima");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("oji"))  return QObject::tr("Ojibwa");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ori"))  return QObject::tr("Oriya");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("orm"))  return QObject::tr("Oromo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("osa"))  return QObject::tr("Osage");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("oss"))  return QObject::tr("Ossetic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("oto"))  return QObject::tr("Otomian languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pal"))  return QObject::tr("Pahlavi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pau"))  return QObject::tr("Palauan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pli"))  return QObject::tr("Pali");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pam"))  return QObject::tr("Pampanga");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pag"))  return QObject::tr("Pangasinan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pan"))  return QObject::tr("Panjabi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pap"))  return QObject::tr("Papiamento");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("paa"))  return QObject::tr("Papuan-Australian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("fas"))  return QObject::tr("Persian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("per"))  return QObject::tr("Persian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("peo"))  return QObject::tr("Persian, Old (ca 600 - 400 B.C.)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("phn"))  return QObject::tr("Phoenician");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pol"))  return QObject::tr("Polish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pon"))  return QObject::tr("Ponape");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("por"))  return QObject::tr("Portuguese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pra"))  return QObject::tr("Prakrit languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pro"))  return QObject::tr("Provencal, Old (to 1500)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("pus"))  return QObject::tr("Pushto");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("que"))  return QObject::tr("Quechua");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("roh"))  return QObject::tr("Rhaeto-Romance");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("raj"))  return QObject::tr("Rajasthani");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("rar"))  return QObject::tr("Rarotongan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("roa"))  return QObject::tr("Romance (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ron"))  return QObject::tr("Romanian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("rum"))  return QObject::tr("Romanian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("rom"))  return QObject::tr("Romany");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("run"))  return QObject::tr("Rundi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("rus"))  return QObject::tr("Russian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sal"))  return QObject::tr("Salishan languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sam"))  return QObject::tr("Samaritan Aramaic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("smi"))  return QObject::tr("Sami languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("smo"))  return QObject::tr("Samoan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sad"))  return QObject::tr("Sandawe");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sag"))  return QObject::tr("Sango");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("san"))  return QObject::tr("Sanskrit");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("srd"))  return QObject::tr("Sardinian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sco"))  return QObject::tr("Scots");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sel"))  return QObject::tr("Selkup");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sem"))  return QObject::tr("Semitic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("scr"))  return QObject::tr("Serbo-Croatian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("srr"))  return QObject::tr("Serer");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("shn"))  return QObject::tr("Shan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sna"))  return QObject::tr("Shona");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sid"))  return QObject::tr("Sidamo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bla"))  return QObject::tr("Siksika");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("snd"))  return QObject::tr("Sindhi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sin"))  return QObject::tr("Singhalese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sit"))  return QObject::tr("Sino-Tibetan (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sio"))  return QObject::tr("Siouan languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sla"))  return QObject::tr("Slavic (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ssw"))  return QObject::tr("Siswant");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("slk"))  return QObject::tr("Slovak");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("slo"))  return QObject::tr("Slovak");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("slv"))  return QObject::tr("Slovenian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sog"))  return QObject::tr("Sogdian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("som"))  return QObject::tr("Somali");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("son"))  return QObject::tr("Songhai");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wen"))  return QObject::tr("Sorbian languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("nso"))  return QObject::tr("Sotho, Northern");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sot"))  return QObject::tr("Sotho, Southern");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sai"))  return QObject::tr("South American Indian (Other)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("esl"))  return QObject::tr("Spanish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("spa"))  return QObject::tr("Spanish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("suk"))  return QObject::tr("Sukuma");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sux"))  return QObject::tr("Sumerian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sun"))  return QObject::tr("Sudanese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sus"))  return QObject::tr("Susu");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("swa"))  return QObject::tr("Swahili");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ssw"))  return QObject::tr("Swazi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sve"))  return QObject::tr("Swedish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("swe"))  return QObject::tr("Swedish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("syr"))  return QObject::tr("Syriac");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tgl"))  return QObject::tr("Tagalog");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tah"))  return QObject::tr("Tahitian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tgk"))  return QObject::tr("Tajik");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tmh"))  return QObject::tr("Tamashek");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tam"))  return QObject::tr("Tamil");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tat"))  return QObject::tr("Tatar");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tel"))  return QObject::tr("Telugu");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ter"))  return QObject::tr("Tereno");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tha"))  return QObject::tr("Thai");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("bod"))  return QObject::tr("Tibetan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tib"))  return QObject::tr("Tibetan");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tig"))  return QObject::tr("Tigre");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tir"))  return QObject::tr("Tigrinya");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tem"))  return QObject::tr("Timne");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tiv"))  return QObject::tr("Tivi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tli"))  return QObject::tr("Tlingit");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tog"))  return QObject::tr("Tonga (Nyasa)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ton"))  return QObject::tr("Tonga (Tonga Islands)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tru"))  return QObject::tr("Truk");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tsi"))  return QObject::tr("Tsimshian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tso"))  return QObject::tr("Tsonga");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tsn"))  return QObject::tr("Tswana");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tum"))  return QObject::tr("Tumbuka");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tur"))  return QObject::tr("Turkish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ota"))  return QObject::tr("Turkish, Ottoman (1500 - 1928)");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tuk"))  return QObject::tr("Turkmen");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("tyv"))  return QObject::tr("Tuvinian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("twi"))  return QObject::tr("Twi");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("uga"))  return QObject::tr("Ugaritic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("uig"))  return QObject::tr("Uighur");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ukr"))  return QObject::tr("Ukrainian");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("umb"))  return QObject::tr("Umbundu");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("und"))  return QObject::tr("Undetermined");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("urd"))  return QObject::tr("Urdu");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("uzb"))  return QObject::tr("Uzbek");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("vai"))  return QObject::tr("Vai");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("ven"))  return QObject::tr("Venda");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("vie"))  return QObject::tr("Vietnamese");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("vol"))  return QObject::tr("Volapük");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("vot"))  return QObject::tr("Votic");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wak"))  return QObject::tr("Wakashan languages");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wal"))  return QObject::tr("Walamo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("war"))  return QObject::tr("Waray");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("was"))  return QObject::tr("Washo");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("cym"))  return QObject::tr("Welsh");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wel"))  return QObject::tr("Welsh");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("wol"))  return QObject::tr("Wolof");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("xho"))  return QObject::tr("Xhosa");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("sah"))  return QObject::tr("Yakut");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("yao"))  return QObject::tr("Yao");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("yap"))  return QObject::tr("Yap");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("yid"))  return QObject::tr("Yiddish");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("yor"))  return QObject::tr("Yoruba");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zap"))  return QObject::tr("Zapotec");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zen"))  return QObject::tr("Zenaga");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zha"))  return QObject::tr("Zhuang");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zul"))  return QObject::tr("Zulu");
    if (*reinterpret_cast<const quint32 *>(lang) == *reinterpret_cast<const quint32 *>("zun"))  return QObject::tr("Zuni");
  }

  return lang;
}


} // End of namespaces
